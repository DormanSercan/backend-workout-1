version: "3.8"

services:
  postgres_db:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookesh
    ports:
      - "5432:5432"
    networks:
      - bookesh_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - bookesh_network

  eureka-server:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    container_name: eureka_server_container
    ports:
      - "8761:8761"
    networks:
      - bookesh_network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order_service_container
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/bookesh
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - bookesh_network

  driver-finder-service:
    build:
      context: .
      dockerfile: driver-finder-service/Dockerfile
    container_name: driver_finder_service_container
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - bookesh_network

networks:
  bookesh_network:
    driver: bridge
